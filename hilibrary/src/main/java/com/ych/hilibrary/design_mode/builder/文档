Builder建造者模式：
    定义：将一个复杂对象的构建与它的表示进行分离，使得同样的构建过程可以创建不同的表示。
    使用场景：
        1.相同的方法，不同的执行顺序，产生不同的事件结果。
        2.产品类非常复杂，或者产品类中的调用顺序不同产生了不同的效能。
    使用：
        1.创建静态内部类Builder，内部实现对象的属性
        2.并通过方法进行返回Builder对象。
        3.创建builde方法，并进行创建外部对象的实例。

Adapter适配器模式
    类适配器模式：
        1.首先创建适配器目标接口，声明要实现的方法。
        2.需要有适配者类（想要适配的类）
        3.创建适配对象，继承适配类，并实现适配器目标接口
        优点：
            1.可以通过适配对象来置换适配者类的方法，使得适配者类更加灵活。
    对象适配器模式：
        1.首先创建适配器目标接口，声明要实现的方法。
        2.需要有适配者类（想要适配的类）
        3.创建适配对象，通过构造方法传入适配者对象，并实现适配器目标接口
        优点：
            1.一个对象适配器可以把多个适配者类适配到同一个目标(也就是可以在构造方法传递多个适配者类)








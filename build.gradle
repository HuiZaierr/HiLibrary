// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.3.72"
    ext.lifecycle_version = "2.2.0"
    ext.gson_version = "2.8.6"
    ext.room_version = "2.3.0"
    ext.nav_version = "2.3.5"

    repositories {
        google()
        jcenter()
        maven { url 'https://repo1.maven.org/maven2/' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //ARouter，将我们初始化的工作在编译时就能完成了，可加可不加
        classpath 'com.alibaba:arouter-register:1.0.2'
        //添加Hilt
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.28-alpha'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        //腾讯多渠道打包工具VasDolly
//        classpath 'com.leon.channel:plugin:2.0.3'
        //AspectJx
//        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.4'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://repo1.maven.org/maven2/' }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}

task TaskA {
    doFirst {
        println "TaskA"
    }
}
task TaskB {
    doFirst {
        println "TaskB"
    }
}

//dependsOn表示依赖关系，执行任务TaskB之前必须先执行TaskA
//TaskB.dependsOn TaskA

//mustRunAfter表示在TaskA和TaskB任务都执行的情况下，才会触发，TaskA才会优先于TaskB
//TaskB.mustRunAfter TaskA

//finalizedBy表示给TaskB添加一个当前任务执行之后立刻执行TaskA
TaskB.finalizedBy TaskA

//打印出项目下所有Task的依赖关系
//afterEvaluate {project ->
//    //收集所有project的task集合
//    Map<String,Set<Task>> allTasks = project.getAllTasks(true)
//    //遍历每一个projetc下的Task集合
//    allTasks.entrySet().each { projTasks ->
//        projTasks.value.each {task ->
//            System.out.println(task.getName());
//            for (Object o :task.getDependsOn()){
//                System.out.println("dependOn ——> ${o.toString()}");
//            }
//            System.out.println("------------------------------");
//        }
//    }
//}